{"ast":null,"code":"var _jsxFileName = \"/Users/jesusramirez/ReactJs/tuwebco/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TodoList } from \"./components/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = \"todoApp.todos\";\nexport function App() {\n  _s();\n\n  const todoTaskRef = useRef();\n  const [todos, setTodos] = useState([{\n    id: 1,\n    task: \"Tarea \",\n    completed: false\n  }]);\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(KEY));\n\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  const toggleTodo = id => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n\n  const handleTodoAdd = event => {\n    const task = todoTaskRef.current.value;\n    if (task === \"\") return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        task,\n        completed: false\n      }];\n    });\n    todoTaskRef.current.value = null;\n  };\n\n  const handleClearAll = () => {\n    const newTodos = todos.filter(todo => !todo.completed);\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoTaskRef,\n      type: \"text\",\n      placeholder: \"Nueva tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTodoAdd,\n      children: \"A\\xF1adir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearAll,\n      children: \"Eliminar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Te quedan \", todos.filter(todo => !todo.completed).length, \" tareas por terminar\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kmTmbV3W/Sokbnb2VF1k5szegdQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jesusramirez/ReactJs/tuwebco/src/App.jsx"],"names":["React","Fragment","useState","useRef","useEffect","v4","uuidv4","TodoList","KEY","App","todoTaskRef","todos","setTodos","id","task","completed","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","newTodos","todo","find","handleTodoAdd","event","current","value","prevTodos","handleClearAll","filter","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TodoList } from \"./components/TodoList\";\n\nconst KEY = \"todoApp.todos\";\n\nexport function App() {\n  const todoTaskRef = useRef();\n  const [todos, setTodos] = useState([\n    { id: 1, task: \"Tarea \", completed: false },\n  ]);\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(KEY));\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  const toggleTodo = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n\n  const handleTodoAdd = (event) => {\n    const task = todoTaskRef.current.value;\n    if (task === \"\") return;\n\n    setTodos((prevTodos) => {\n      return [...prevTodos, { id: uuidv4(), task, completed: false }];\n    });\n\n    todoTaskRef.current.value = null;\n  };\n\n  const handleClearAll = () => {\n    const newTodos = todos.filter((todo) => !todo.completed);\n    setTodos(newTodos);\n  };\n\n  return (\n    <Fragment>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoTaskRef} type=\"text\" placeholder=\"Nueva tarea\" />\n      <button onClick={handleTodoAdd}>AÃ±adir</button>\n      <button onClick={handleClearAll}>Eliminar</button>\n      <div>\n        Te quedan {todos.filter((todo) => !todo.completed).length} tareas por\n        terminar\n      </div>\n    </Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}